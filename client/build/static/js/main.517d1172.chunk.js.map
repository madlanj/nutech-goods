{"version":3,"sources":["utils/index.js","redux/constants/auth.js","utils/axios-instance.js","service/api.service.js","permissions/AuthRoute.js","redux/mutations/index.js","redux/mutations/auth.js","redux/reducers/index.js","redux/reducers/auth.js","redux/saga/auth.js","redux/saga/index.js","redux/store/index.js","views/Views.js","App.js","index.js"],"names":["Utils","pathname","window","origin","join","type","token","localStorage","getItem","setItem","removeItem","err","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_ERROR","ROOT_API","TOKEN","NewToken","headers","getToken","AxiosInstance","axios","create","baseURL","isCancel","interceptors","response","use","res","Promise","resolve","reject","data","error","console","log","status","ApiService","props","this","url","body","config","params","get","then","fields","pagination","Reflect","set","query","message","catch","post","put","delete","PrivateRoute","Component","component","isAuthenticated","loading","rest","history","createBrowserHistory","render","to","connect","auth","React","memo","mutate","initialState","logout","state","action","login","success","reducers","combineReducers","LoadUser","rootSaga","takeEvery","formdata","call","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","withRouter","fallback","path","lazy","AuthRoute","App","className","Views","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.517d1172.chunk.js","sourcesContent":["export default class Utils  {\r\n    static getThumbnail(pathname){\r\n        return [window.origin,pathname].join(\"/\")\r\n    }\r\n    static getToken(type = 'get',token = null) {\r\n        try {\r\n            switch (type) {\r\n                case \"get\":\r\n                    if (localStorage.getItem(\"token\")) {\r\n                        return localStorage.getItem(\"token\")\r\n                    }\r\n                    return null\r\n                    case \"set\":\r\n                        localStorage.setItem(\"token\",token)\r\n                        break;\r\n                case \"remove\":\r\n                    if (localStorage.getItem(\"token\")) {\r\n                        localStorage.removeItem('token')\r\n                        return true\r\n                    }\r\n                    return true\r\n                default:\r\n                    if (localStorage.getItem(\"token\")) {\r\n                        return localStorage.getItem(\"token\")\r\n                    }\r\n                    return null\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            return null\r\n        }\r\n\r\n    }\r\n}","export const SIGN_IN = \"SIGN_IN\"\r\nexport const SIGN_IN_SUCCESS = \"SIGN_IN_SUCCESS\"\r\nexport const SIGN_IN_ERROR = \"SIGN_IN_ERROR\"","import axios from 'axios'\r\nimport Utils from \".\"; // function Logout in redux action\r\n\r\nconst ROOT_API = window.origin\r\n// .replace(/:300(0|1|2|3|4|5)/g,\":3000\"); // window.origin https://heroku\r\n\r\nlet TOKEN = null;\r\nif (localStorage.getItem(\"token\")) {\r\n    try {\r\n        let NewToken = localStorage.getItem('token')\r\n        if (typeof (NewToken) !== \"undefined\") {\r\n            TOKEN = NewToken\r\n        }\r\n    } catch (err) {\r\n        TOKEN = \"\"\r\n    }\r\n}\r\n\r\nlet headers = {\r\n    \"Authorization\": Utils.getToken() ?? TOKEN\r\n}\r\n\r\n\r\nconst AxiosInstance = axios.create({\r\n    baseURL: ROOT_API,\r\n    headers: {\r\n        ...headers,\r\n    }\r\n})\r\n\r\nAxiosInstance.isCancel = axios.isCancel;\r\n\r\nAxiosInstance.interceptors.response.use(\r\n    (res) =>\r\n        new Promise((resolve, reject) => {\r\n            if (res.data.error === 'Unauthorized') {\r\n                console.log('gues')\r\n            } else {\r\n                resolve(res)\r\n            }\r\n        }),\r\n\r\n    (err) => {\r\n        if (!err.response) {\r\n            return new Promise((resolve, reject) => {\r\n                reject(err)\r\n            })\r\n        }\r\n        if (err.response.status === 401) {\r\n            return new Promise((resolve, reject) => {\r\n                reject(err)\r\n            })\r\n            // store.dispatch(signOut())\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                reject(err)\r\n            })\r\n        }\r\n    }\r\n)\r\n\r\nexport default AxiosInstance;\r\n","import Utils from \"../utils\";\r\nimport AxiosInstance from \"../utils/axios-instance\";\r\n\r\nexport default class ApiService {\r\n    constructor(props = {}) {\r\n        this.url = props?.url ?? \"/\"\r\n        this.body = props?.body ?? \"\"\r\n        this.config = {\r\n            ...props?.config,\r\n            params:props?.config?.params ?? {},\r\n            headers: props?.config?.headers ?? {\r\n                'Authorization': `Bearer ${Utils.getToken('get')}`\r\n            }\r\n        }\r\n    }\r\n    async get(){\r\n        try{\r\n            return await AxiosInstance.get(this.url,{\r\n                ...this.config\r\n            })\r\n                .then((response)=> {\r\n                    let data = response?.data\r\n                    let fields = {}\r\n                    if(typeof(data?.pagination) !== \"undefined\"){\r\n                        Reflect.set(fields,\"pagination\", data?.pagination)\r\n                    }\r\n                    if(typeof(data?.query) !== \"undefined\"){\r\n                        Reflect.set(fields,\"params\", data?.query)\r\n                    }\r\n                    if(typeof(data?.params) !== \"undefined\"){\r\n                        Reflect.set(fields,\"params\", data?.params)\r\n                    }\r\n\r\n                    if(typeof(data?.data) !== \"undefined\"){\r\n                        Reflect.set(fields,\"data\", data?.data)\r\n                    }\r\n                    if(typeof(data?.error) !== \"undefined\"){\r\n                        Reflect.set(fields,\"error\",data?.error)\r\n                    }\r\n                    if(typeof(data?.message) !== \"undefined\"){\r\n                        Reflect.set(fields,\"message\",data?.message)\r\n                    }\r\n                    return fields\r\n                })\r\n                .catch((err)=> {\r\n                    return {\r\n                        error:true,\r\n                        message: err.message,\r\n                        data: null\r\n                    }\r\n                })\r\n        }catch(err){\r\n            return {\r\n                error:true,\r\n                message: err.message,\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n    async post(){\r\n        try{\r\n            return await AxiosInstance.post(this.url,this.body,{\r\n                ...this.config\r\n            })\r\n                .then((response)=> {\r\n                    let data = response?.data\r\n                    let fields = {}\r\n                    if(typeof(data?.pagination) !== \"undefined\"){\r\n                        Reflect.set(fields,\"pagination\", data?.pagination)\r\n                    }\r\n                    if(typeof(data?.query) !== \"undefined\"){\r\n                        Reflect.set(fields,\"params\", data?.query)\r\n                    }\r\n                    if(typeof(data?.params) !== \"undefined\"){\r\n                        Reflect.set(fields,\"params\", data?.params)\r\n                    }\r\n\r\n                    if(typeof(data?.data) !== \"undefined\"){\r\n                        Reflect.set(fields,\"data\", data?.data)\r\n                    }\r\n                    if(typeof(data?.error) !== \"undefined\"){\r\n                        Reflect.set(fields,\"error\",data?.error)\r\n                    }\r\n                    if(typeof(data?.message) !== \"undefined\"){\r\n                        Reflect.set(fields,\"message\",data?.message)\r\n                    }\r\n                    return fields\r\n                })\r\n                .catch((err)=> {\r\n                    return {\r\n                        error:true,\r\n                        message: err.message,\r\n                        data: null\r\n                    }\r\n                })\r\n        }catch(err){\r\n            return {\r\n                error:true,\r\n                message: err.message,\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n    async put(){\r\n        try{\r\n            return await AxiosInstance.put(this.url,this.body,{\r\n                ...this.config\r\n            })\r\n                .then((response)=> {\r\n                    let data = response?.data\r\n                    let fields = {}\r\n                    if(typeof(data?.pagination) !== \"undefined\"){\r\n                        Reflect.set(fields,\"pagination\", data?.pagination)\r\n                    }\r\n                    if(typeof(data?.query) !== \"undefined\"){\r\n                        Reflect.set(fields,\"params\", data?.query)\r\n                    }\r\n                    if(typeof(data?.params) !== \"undefined\"){\r\n                        Reflect.set(fields,\"params\", data?.params)\r\n                    }\r\n\r\n                    if(typeof(data?.data) !== \"undefined\"){\r\n                        Reflect.set(fields,\"data\", data?.data)\r\n                    }\r\n                    if(typeof(data?.error) !== \"undefined\"){\r\n                        Reflect.set(fields,\"error\",data?.error)\r\n                    }\r\n                    if(typeof(data?.message) !== \"undefined\"){\r\n                        Reflect.set(fields,\"message\",data?.message)\r\n                    }\r\n                    return fields\r\n                })\r\n                .catch((err)=> {\r\n                    return {\r\n                        error:true,\r\n                        message: err.message,\r\n                        data: null\r\n                    }\r\n                })\r\n        }catch(err){\r\n            return {\r\n                error:true,\r\n                message: err.message,\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n    async delete(){\r\n        try{\r\n            return await AxiosInstance.delete(this.url,{\r\n                ...this.config\r\n            })\r\n                .then((response)=> {\r\n                    let data = response?.data\r\n                    let fields = {}\r\n                    if(typeof(data?.pagination) !== \"undefined\"){\r\n                        Reflect.set(fields,\"pagination\", data?.pagination)\r\n                    }\r\n                    if(typeof(data?.query) !== \"undefined\"){\r\n                        Reflect.set(fields,\"params\", data?.query)\r\n                    }\r\n                    if(typeof(data?.params) !== \"undefined\"){\r\n                        Reflect.set(fields,\"params\", data?.params)\r\n                    }\r\n\r\n                    if(typeof(data?.data) !== \"undefined\"){\r\n                        Reflect.set(fields,\"data\", data?.data)\r\n                    }\r\n                    if(typeof(data?.error) !== \"undefined\"){\r\n                        Reflect.set(fields,\"error\",data?.error)\r\n                    }\r\n                    if(typeof(data?.message) !== \"undefined\"){\r\n                        Reflect.set(fields,\"message\",data?.message)\r\n                    }\r\n                    return fields\r\n                })\r\n                .catch((err)=> {\r\n                    return {\r\n                        error:true,\r\n                        message: err.message,\r\n                        data: null\r\n                    }\r\n                })\r\n        }catch(err){\r\n            return {\r\n                error:true,\r\n                message: err.message,\r\n                data: null\r\n            }\r\n        }\r\n    }    \r\n}\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {createBrowserHistory} from \"history\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component, isAuthenticated, token,loading,...rest})=> {\r\n\r\n    console.log({isAuthenticated,token,loading});\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            history={createBrowserHistory}\r\n            render={(props)=> {\r\n                return !loading ?\r\n                    !isAuthenticated ? (\r\n                        <Component {...props}/>\r\n                    ):(\r\n                        <Redirect  to={{\r\n                            pathname: \"/\"}}/>\r\n                    ):\"Loading...\"\r\n            }}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps =({auth})=> {\r\n    let {isAuthenticated,loading,token}= auth\r\n    return {isAuthenticated,loading,token}\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(React.memo(PrivateRoute))\r\n","import auth from './auth'\r\n\r\nconst mutate = {\r\n    auth\r\n}\r\nexport default mutate","import Utils from \"../../utils\"\r\n\r\nconst auth = {\r\n    initialState:{\r\n        loading: false,\r\n        message: null,\r\n        token: Utils.getToken('get'),\r\n        isAuthenticated: Utils.getToken('get') ? true :false,\r\n    },\r\n    logout: (state,action)=> {\r\n        Utils.getToken(\"remove\")\r\n        return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated:false,\r\n        }\r\n    },\r\n    login: {\r\n        post: (state,action)=> {\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                message: null,\r\n            }\r\n        },\r\n        success: (state,action)=> {\r\n            Utils.getToken('set',action?.data)\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                message: action?.message ?? null,\r\n                token: action?.data ?? null,\r\n                isAuthenticated: true,\r\n            }\r\n        },\r\n        error: (state,action)=> {\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                message: action?.message ?? null,\r\n                token: null,\r\n                isAuthenticated:false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default auth","import { combineReducers } from 'redux';\r\nimport auth from './auth'\r\nconst reducers = combineReducers({\r\n    auth\r\n})\r\nexport default reducers;","import mutate from \"../mutations\";\r\nimport { SIGN_IN,SIGN_IN_SUCCESS,SIGN_IN_ERROR } from '../constants/index'\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (state = mutate.auth.initialState, action){\r\n    let { type } = action\r\n    switch(type){\r\n        case SIGN_IN:\r\n            return mutate.auth.login.post(state,action)\r\n        case SIGN_IN_SUCCESS:\r\n            return mutate.auth.login.success(state,action)\r\n        case SIGN_IN_ERROR:\r\n            return mutate.auth.login.error(state,action)\r\n        case \"SIGN_OUT\":\r\n            return mutate.auth.logout(state,action)\r\n        default:\r\n            return state\r\n    }\r\n}","import {all, takeEvery, put, fork, call} from 'redux-saga/effects';\r\nimport ApiService from '../../service/api.service';\r\nimport Utils from '../../utils';\r\nimport { SIGN_IN, SIGN_IN_ERROR, SIGN_IN_SUCCESS } from '../constants';\r\n\r\nexport function* LoadUser() {\r\n    yield takeEvery(SIGN_IN, function* ({formdata}) {\r\n        try{\r\n            const response = yield call(()=> {\r\n                return new Promise((resolve)=> {\r\n                    resolve(new ApiService({\r\n                        url:\"/api/v1/auth/signin\",\r\n                        body:formdata,\r\n                        config:{\r\n                            headers: {\r\n                                \"Content-Type\":\"application/x-www-form-urlencoded\",\r\n                                \"Authorization\": `Bearer ${Utils.getToken('get')}`\r\n                            }\r\n                        }\r\n                    }).post())})\r\n            })\r\n\r\n            if(!response?.error){\r\n                yield put ({\r\n                    type:SIGN_IN_SUCCESS,\r\n                    ...response\r\n                })\r\n            }else{\r\n                yield put ({\r\n                    type: SIGN_IN_ERROR,\r\n                    message: response?.message ?? null\r\n                })\r\n            }\r\n\r\n        }catch(err){\r\n            yield put ({\r\n                type: SIGN_IN_ERROR,\r\n                message: err?.message ?? null\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(LoadUser)\r\n    ])\r\n}","import {all} from 'redux-saga/effects';\r\nimport auth from './auth'\r\nexport default function* rootSaga(getState) {\r\n    yield all([\r\n    auth()\r\n    ])\r\n}","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../saga/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React,{Suspense,lazy} from 'react'\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport AuthRoute from '../permissions/AuthRoute';\r\n\r\nconst Views = (props)=> {\r\n    return (\r\n        <Suspense fallback={<div>loading...</div>}>\r\n            <Switch>\r\n                <Route path={'/app'} component={lazy(()=> import (\"./app-views/index\"))}/>\r\n                <AuthRoute path={'/auth'} component={lazy(()=> import(\"./auth-views/index\"))}/>\r\n                <Route path='/'>\r\n                    <Redirect to={'/app'}/>\r\n                </Route>\r\n            </Switch>\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default withRouter(Views)","import React from 'react'\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './redux/store';\nimport {Route, Switch } from 'react-router-dom';\nimport Views from './views/Views';\n\n\nexport const UserContext = React.createContext();\nfunction App() {\n  return (\n    <div className='App'>\n          <Provider store={store}>\n<Router>\n    <Switch>\n    <Route path=\"/\" component={Views}/>\n    </Switch>\n</Router>\n    </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport \"bulma/css/bulma.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import \"bulma/css/bulma.css\"\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}