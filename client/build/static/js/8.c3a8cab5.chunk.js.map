{"version":3,"sources":["permissions/PrivateRoute.js","views/app-views/index.js"],"names":["PrivateRoute","Component","component","isAuthenticated","token","loading","rest","console","log","history","createBrowserHistory","render","props","to","pathname","connect","auth","React","memo","AppViews","match","fallback","path","url","lazy","exact","from"],"mappings":"kQAMMA,EAAe,SAAC,GAAmE,IAAvDC,EAAsD,EAAjEC,UAAsBC,EAA2C,EAA3CA,gBAAiBC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,QAAWC,EAAS,iBAIpF,OAFAC,QAAQC,IAAI,CAACL,kBAAgBC,QAAMC,YAG/B,cAAC,IAAD,2BACQC,GADR,IAEIG,QAASC,IACTC,OAAQ,SAACC,GACL,OAAQP,EAMF,aALFF,EACI,cAACF,EAAD,eAAeW,IAEf,cAAC,IAAD,CAAWC,GAAI,CACXC,SAAU,UAEzB,IAIZ,EAOcC,eALQ,SAAC,GAAW,IAAVC,EAAS,EAATA,KAErB,MAAO,CAACb,gBAD6Ba,EAAhCb,gBACmBE,QADaW,EAAhBX,QACWD,MADKY,EAARZ,MAEhC,GAEsC,CAAC,EAAzBW,CAA4BE,IAAMC,KAAKlB,IC5BhDmB,EAAW,SAACP,GACd,IAAMQ,EAAUR,EAAVQ,MACN,OACI,cAAC,WAAD,CAAUC,SAAU,aAApB,SACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAcC,KAAI,UAAKF,EAAMG,IAAX,YAA0BrB,UAAWsB,gBAAK,kBAAK,4BAAL,MAC5D,cAAC,EAAD,CAAcF,KAAI,UAAKF,EAAMG,IAAX,UAAwBE,OAAK,EAACvB,UAAWsB,gBAAK,kBAAK,4BAAL,MAChE,cAAC,EAAD,CAAcF,KAAI,UAAKF,EAAMG,IAAX,cAA4BE,OAAK,EAACvB,UAAWsB,gBAAK,kBAAK,4BAAL,MACpE,cAAC,EAAD,CAAcF,KAAI,UAAKF,EAAMG,IAAX,qBAAmCrB,UAAWsB,gBAAK,kBAAK,4BAAL,MACrE,cAAC,EAAD,CAAcF,KAAI,UAAKF,EAAMG,IAAX,cAA4BrB,UAAWsB,gBAAK,kBAAK,4BAAL,MAC9D,cAAC,IAAD,CAAUE,KAAI,UAAKN,EAAMG,IAAX,KAAmBV,GAAE,UAAKO,EAAMG,IAAX,kBAIlD,EAEcN,cAAMC,KAAKC,E","file":"static/js/8.c3a8cab5.chunk.js","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {createBrowserHistory} from \"history\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component, isAuthenticated, token,loading,...rest})=> {\r\n\r\n    console.log({isAuthenticated,token,loading});\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            history={createBrowserHistory}\r\n            render={(props)=> {\r\n                return !loading ?\r\n                    isAuthenticated ? (\r\n                        <Component {...props}/>\r\n                    ):(\r\n                        <Redirect  to={{\r\n                            pathname: \"/auth\"}}/>\r\n                    ):\"Loading...\"\r\n            }}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps =({auth})=> {\r\n    let {isAuthenticated,loading,token}= auth\r\n    return {isAuthenticated,loading,token}\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(React.memo(PrivateRoute))\r\n","import React, {lazy, Suspense} from \"react\";\r\nimport {Switch, Redirect} from \"react-router-dom\";\r\nimport PrivateRoute from \"../../permissions/PrivateRoute\";\r\n\r\n\r\nconst AppViews = (props)=> {\r\n    let { match } = props\r\n    return(\r\n        <Suspense fallback={'loading...'}>\r\n            <Switch>\r\n                <PrivateRoute path={`${match.url}/default`} component={lazy(()=> import('./product/product-list/index'))}/>\r\n                <PrivateRoute path={`${match.url}/goods`} exact component={lazy(()=> import('./product/product-list/index'))}/>\r\n                <PrivateRoute path={`${match.url}/goods/add`} exact component={lazy(()=> import('./product/product-add/index'))}/>\r\n                <PrivateRoute path={`${match.url}/goods/update/:id`} component={lazy(()=> import('./product/product-update/index'))}/>\r\n                <PrivateRoute path={`${match.url}/goods/:id`} component={lazy(()=> import('./product/product-single/index'))}/>\r\n                <Redirect from={`${match.url}/`} to={`${match.url}/default`}/>\r\n            </Switch>\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default React.memo(AppViews)"],"sourceRoot":""}